<metro:MetroWindow
   x:Class="FileRenamerDiff.Views.MainWindow"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
   xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
   xmlns:properties="clr-namespace:FileRenamerDiff.Properties"
   xmlns:v="clr-namespace:FileRenamerDiff.Views"
   xmlns:vm="clr-namespace:FileRenamerDiff.ViewModels"
   Title="FILE RENAMER DIFF"
   Width="1600"
   Height="800"
   Background="{StaticResource MaterialDesignPaper}"
   BorderBrush="{StaticResource PrimaryHueMidBrush}"
   BorderThickness="1"
   FontFamily="Meiryo"
   FontWeight="Bold"
   GlowBrush="{StaticResource PrimaryHueMidBrush}"
   Icon="/FileRenamerDiff_icon.ico"
   TextElement.Foreground="{StaticResource MaterialDesignBody}"
   TitleCharacterCasing="Normal">
   <Window.DataContext>
      <vm:MainWindowViewModel />
   </Window.DataContext>

   <metro:MetroWindow.Resources>
      <v:BoolToCursorConverter x:Key="BoolToCursorConverter" />
      <l:TaskbarItemProgressStateAndBooleanConverter
         x:Key="TaskbarItemProgressStateAndBooleanConverter"
         ConvertWhenFalse="Indeterminate"
         ConvertWhenTrue="Normal" />
   </metro:MetroWindow.Resources>
   <!--  アプリケーションが待機状態で無いときは、タスクバーとマウスカーソルの表示を変更  -->
   <metro:MetroWindow.Cursor>
      <Binding Converter="{StaticResource BoolToCursorConverter}" Path="IsIdle.Value" />
   </metro:MetroWindow.Cursor>
   <Window.TaskbarItemInfo>
      <TaskbarItemInfo ProgressState="{Binding IsIdle.Value, Converter={StaticResource TaskbarItemProgressStateAndBooleanConverter}, Mode=OneWay}" />
   </Window.TaskbarItemInfo>

   <behaviors:Interaction.Triggers>
      <!--  When ContentRendered event raised, Initialize method of ViewModel would be called.  -->
      <behaviors:EventTrigger EventName="ContentRendered">
         <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding Mode=OneTime}" />
      </behaviors:EventTrigger>

      <!--  Dispose method is called, when Window closing.  -->
      <behaviors:EventTrigger EventName="Closed">
         <l:DataContextDisposeAction />
      </behaviors:EventTrigger>
   </behaviors:Interaction.Triggers>

   <!--  ファイルパスドロップ時にターゲットパスとして読み込む  -->
   <behaviors:Interaction.Behaviors>
      <v:FileDropBehavior Command="{Binding LoadFilesFromNewPathCommand}" />
   </behaviors:Interaction.Behaviors>

   <materialDesign:DialogHost
      CloseOnClickAway="{Binding CloseOnClickAwayDialog.Value}"
      DialogContent="{Binding DialogContentVM.Value, Mode=OneWay}"
      IsOpen="{Binding DialogContentVM.Value.IsDialogOpen.Value, Mode=TwoWay}"
      OverlayBackground="{StaticResource PrimaryHueDarkBrush}">

      <!--  DataGridのヘッダーからBindingするために、名前付け  -->
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
         </Grid.RowDefinitions>
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
         </Grid.ColumnDefinitions>

         <materialDesign:ColorZone
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Padding="8"
            Mode="PrimaryDark">
            <DockPanel>
               <!--  アプリケーション情報ボタン（右端）  -->
               <Button
                  Command="{Binding ShowInformationPageCommand}"
                  Content="{materialDesign:PackIcon InfoCircle}"
                  DockPanel.Dock="Right"
                  Style="{StaticResource MaterialDesignIconForegroundButton}" />

               <StackPanel
                  VerticalAlignment="Center"
                  DockPanel.Dock="Left"
                  Orientation="Horizontal">

                  <!--  ターゲットファイルパス選択  -->
                  <materialDesign:ColorZone
                     Margin="16,0,0,0"
                     Padding="8,4,8,4"
                     materialDesign:ShadowAssist.ShadowDepth="Depth1"
                     CornerRadius="2">
                     <StackPanel Orientation="Horizontal">
                        <Button Padding="8,2" Style="{StaticResource MaterialDesignRaisedButton}">
                           <behaviors:Interaction.Triggers>
                              <behaviors:EventTrigger EventName="Click">
                                 <l:FolderBrowserDialogInteractionMessageAction>
                                    <l:DirectInteractionMessage CallbackCommand="{Binding LoadFilesFromDialogCommand, Mode=OneTime}">
                                       <l:FolderSelectionMessage
                                          Description="Select Target Folder"
                                          DialogPreference="None"
                                          SelectedPath="{Binding SettingVM.Value.SearchFilePath.Value}" />
                                    </l:DirectInteractionMessage>
                                 </l:FolderBrowserDialogInteractionMessageAction>
                              </behaviors:EventTrigger>
                           </behaviors:Interaction.Triggers>
                           <materialDesign:PackIcon
                              Width="24"
                              Height="24"
                              Kind="FolderOpen" />
                        </Button>
                        <TextBox
                           MinWidth="250"
                           Margin="5,0"
                           materialDesign:HintAssist.Foreground="{StaticResource HighContrastBrush}"
                           materialDesign:HintAssist.Hint="{x:Static properties:Resources.Hint_SelectTargetDirectory}"
                           FontSize="14"
                           Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                           Text="{Binding SettingVM.Value.SearchFilePath.Value}" />
                     </StackPanel>
                  </materialDesign:ColorZone>

                  <!--  ファイル読み込み開始ボタン  -->
                  <Button
                     Margin="8,0,0,0"
                     Command="{Binding LoadFilesFromCurrentPathCommand, Mode=OneTime}"
                     Style="{StaticResource MaterialDesignRaisedLightButton}">
                     <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="FolderSearchOutline" />
                        <TextBlock Margin="5,0" Text="{x:Static properties:Resources.Menu_SearchFiles}" />
                     </StackPanel>
                  </Button>

                  <!--  リネームプレビューボタン  -->
                  <Button
                     Margin="20,0,0,0"
                     Command="{Binding ReplaceCommand, Mode=OneTime}"
                     Style="{StaticResource MaterialDesignRaisedAccentButton}">
                     <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="RenameBox" />
                        <TextBlock Margin="5,0" Text="{x:Static properties:Resources.Menu_DryRun}" />
                     </StackPanel>
                  </Button>

                  <!--  リネーム実行ボタン  -->
                  <Button
                     Margin="8,0"
                     Command="{Binding RenameExcuteCommand, Mode=OneTime}"
                     Style="{StaticResource MaterialDesignRaisedAccentButton}">
                     <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ContentSaveAllOutline" />
                        <TextBlock Margin="5,0" Text="{x:Static properties:Resources.Menu_Save}" />
                     </StackPanel>
                  </Button>
               </StackPanel>
            </DockPanel>
         </materialDesign:ColorZone>
         <v:FileElementGrid Grid.Row="1" Grid.Column="1" DataContext="{Binding GridVM}"/>
         <Expander
            Grid.Row="1"
            Grid.Column="0"
            ExpandDirection="Left"
            IsExpanded="True">
            <Expander.Header>
               <StackPanel>
                  <materialDesign:PackIcon
                     Width="24"
                     Height="24"
                     Kind="CogOutline" />
                  <TextBlock
                     Margin="0,8"
                     Style="{StaticResource MaterialDesignBody1TextBlock}"
                     Text="{x:Static properties:Resources.Setting_SettingTab}">
                     <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90" />
                     </TextBlock.LayoutTransform>
                  </TextBlock>
               </StackPanel>
            </Expander.Header>
            <ScrollViewer IsEnabled="{Binding IsIdle.Value}">
               <v:SettingAppPage DataContext="{Binding SettingVM.Value}" />
            </ScrollViewer>
         </Expander>
      </Grid>
   </materialDesign:DialogHost>
</metro:MetroWindow>
