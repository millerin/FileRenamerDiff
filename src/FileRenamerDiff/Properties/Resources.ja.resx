<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Setting_FileSearch" xml:space="preserve">
    <value>ファイル探索</value>
  </data>
  <data name="Setting_SearchSubDirectories" xml:space="preserve">
    <value>サブフォルダ以下も探索する</value>
  </data>
  <data name="Setting_IgnoreDirectory" xml:space="preserve">
    <value>フォルダ自体もリネームする</value>
  </data>
  <data name="Setting_IgnoreExtensions" xml:space="preserve">
    <value>無視する拡張子</value>
  </data>
  <data name="Setting_Add" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="Setting_DeleteTexts" xml:space="preserve">
    <value>削除する文字</value>
  </data>
  <data name="Setting_AsExpression" xml:space="preserve">
    <value>正規表現</value>
  </data>
  <data name="Setting_ReplacePatterns" xml:space="preserve">
    <value>置換パターン</value>
  </data>
  <data name="Setting_ReplaceTextTarget" xml:space="preserve">
    <value>置換前</value>
  </data>
  <data name="Setting_ReplaceText" xml:space="preserve">
    <value>置換後</value>
  </data>
  <data name="Setting_ResetAllSetting" xml:space="preserve">
    <value>全設定の初期化</value>
  </data>
  <data name="Setting_Other" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="Menu_SearchFiles" xml:space="preserve">
    <value>ファイル探索実行</value>
  </data>
  <data name="Menu_DryRun" xml:space="preserve">
    <value>リネームプレビュー</value>
  </data>
  <data name="Menu_Save" xml:space="preserve">
    <value>リネーム保存</value>
  </data>
  <data name="Grid_OldText" xml:space="preserve">
    <value>現在のファイル名</value>
  </data>
  <data name="Grid_NewText" xml:space="preserve">
    <value>新しいファイル名</value>
  </data>
  <data name="Grid_Changed" xml:space="preserve">
    <value>変更ありマーク
変更があれば、チェックマークが表示される。</value>
  </data>
  <data name="Grid_Conflicted" xml:space="preserve">
    <value>重複ありマーク
重複があれば、重複マークが表示される。</value>
  </data>
  <data name="Grid_DateModified" xml:space="preserve">
    <value>更新日時</value>
  </data>
  <data name="Grid_CreatedDate" xml:space="preserve">
    <value>作成日時</value>
  </data>
  <data name="Setting_SettingTab" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Setting_DeleteTextTarget" xml:space="preserve">
    <value>削除文字</value>
  </data>
  <data name="Grid_Directory" xml:space="preserve">
    <value>ディレクトリ</value>
  </data>
  <data name="Grid_Size" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="Alert_FailSaveSetting" xml:space="preserve">
    <value>設定の保存に失敗しました。</value>
  </data>
  <data name="Alert_FailSaveRename" xml:space="preserve">
    <value>リネーム保存に失敗しました。</value>
  </data>
  <data name="Info_SettingsReset" xml:space="preserve">
    <value>設定がリセットされました。</value>
  </data>
  <data name="Alert_FileNamesDuplicated" xml:space="preserve">
    <value>一部のファイル名が重複しています。</value>
  </data>
  <data name="Alert_InvalidFileName" xml:space="preserve">
    <value>出力ファイル名に無効な文字が含まれています。</value>
  </data>
  <data name="Setting_ClearAll" xml:space="preserve">
    <value>全削除</value>
  </data>
  <data name="Alert_ConfirmClearBody" xml:space="preserve">
    <value>テーブルをクリアしてもよろしいですか?</value>
  </data>
  <data name="Alert_ConfirmClearHead" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="Windows_CopyFileSuffix" xml:space="preserve">
    <value>- コピー</value>
  </data>
  <data name="Alert_NotFoundFileBody" xml:space="preserve">
    <value>ファイルが見つかりませんでした。</value>
  </data>
  <data name="Hint_SelectTargetDirectory" xml:space="preserve">
    <value>左のボタンから対象のディレクトリを選択するか、ドラッグ アンド ドロップしてください。</value>
  </data>
  <data name="Setting_IgnoreFileTypes" xml:space="preserve">
    <value>リネームするファイル種類</value>
  </data>
  <data name="Setting_FileTypeHidden" xml:space="preserve">
    <value>隠しファイル</value>
  </data>
  <data name="Setting_FileTypeDirectory" xml:space="preserve">
    <value>フォルダ</value>
  </data>
  <data name="Setting_FileTypeFile" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="Windows_ShortcutFileSuffix" xml:space="preserve">
    <value>- ショートカット</value>
  </data>
  <data name="Setting_ImportSettingFile" xml:space="preserve">
    <value>設定のインポート</value>
  </data>
  <data name="Setting_ExportSettingFile" xml:space="preserve">
    <value>設定のエクスポート</value>
  </data>
  <data name="Common_DeleteWindowsCopyTag" xml:space="preserve">
    <value>Windowsのコピータグを削除する</value>
  </data>
  <data name="Common_DeleteWindowsShortcutTag" xml:space="preserve">
    <value>Windowsのショートカットタグを削除する</value>
  </data>
  <data name="Common_DeleteWindowsNumberTag" xml:space="preserve">
    <value>Windowsの(数字)タグを削除する</value>
  </data>
  <data name="Common_DeleteWhitespacesHeadTail" xml:space="preserve">
    <value>先頭と末尾のスペースを削除する</value>
  </data>
  <data name="Common_DeleteExtention" xml:space="preserve">
    <value>拡張子の削除</value>
  </data>
  <data name="Common_SurroundWithSqureBrackets" xml:space="preserve">
    <value>"ABC"を[]で囲う</value>
  </data>
  <data name="Common_ReduceWhiteSpace" xml:space="preserve">
    <value>スペースを1つの半角スペースに減らす</value>
  </data>
  <data name="Common_ReplaceWhiteSpacesWithUnderbar" xml:space="preserve">
    <value>空白を'_'に置き換える</value>
  </data>
  <data name="Common_AddThreeZero" xml:space="preserve">
    <value>数字に'0'を3つ追加する (3桁のゼロ埋め 1/2)</value>
  </data>
  <data name="Common_TakeNumberThreeDigits" xml:space="preserve">
    <value>数字を3桁に減らす (3桁のゼロ埋め 2/2)</value>
  </data>
  <data name="Common_ReplaceAllExtentionToABC" xml:space="preserve">
    <value>拡張子を"ABC"に置き換える</value>
  </data>
  <data name="Common_DeleteIgnoreCase" xml:space="preserve">
    <value>大文字小文字を区別せずに"ABC"を削除する</value>
  </data>
  <data name="Common_ReplaceIgnoreCase" xml:space="preserve">
    <value>大文字小文字を区別せずに"ABC"を”x"に置換する</value>
  </data>
  <data name="Setting_CommonPatterns" xml:space="preserve">
    <value>よくあるパターン集</value>
  </data>
  <data name="Common_DeleteWhitespacesBeforeSymbol" xml:space="preserve">
    <value>記号の前の空白を削除する</value>
  </data>
  <data name="Common_DeleteWhitespacesInsideBrace" xml:space="preserve">
    <value>括弧の内側の空白を削除する</value>
  </data>
  <data name="Common_DeleteBeforeExtension" xml:space="preserve">
    <value>拡張子より前の文字を削除する</value>
  </data>
  <data name="Common_DeleteAll" xml:space="preserve">
    <value>全ての文字を削除する</value>
  </data>
  <data name="Setting_IsCreateRenameLog" xml:space="preserve">
    <value>リネーム時にログファイルを作成する</value>
  </data>
  <data name="Info_FileRemoved" xml:space="preserve">
    <value>リネーム保存後に、一部のファイルがリストから除かれました。</value>
  </data>
  <data name="Menu_AddFiles" xml:space="preserve">
    <value>ファイル追加</value>
  </data>
  <data name="Grid_DropDescription" xml:space="preserve">
    <value>1. 対象ファイルの指定
ここにファイルをドラッグ＆ドロップしたり、特定のディレクトリから「ファイル探索実行」したりすることができます。

2. リネームパターンの設定
「設定」から削除/置換パターンを設定します。

3. 名前の変更を確認する
「プレビュー」を実行して名前の変更を確認します。

4. リネームを実行します。
「リネーム保存」を実行して、実際のファイル名を変更します。</value>
  </data>
  <data name="Menu_SearchFilesHint" xml:space="preserve">
    <value>左側の対象ディレクトリ内のファイルを検索します。</value>
  </data>
  <data name="Menu_AddFilesHint" xml:space="preserve">
    <value>リネームするファイルを直接指定する。</value>
  </data>
  <data name="Menu_DryRunHint" xml:space="preserve">
    <value>下のリスト上でのみ変更し、ストレージにはまだ保存しない。</value>
  </data>
  <data name="Menu_SaveHint" xml:space="preserve">
    <value>ストレージに保存する。</value>
  </data>
  <data name="Setting_IsRenameExt" xml:space="preserve">
    <value>ファイルの拡張子もリネームする</value>
  </data>
  <data name="Common_ReplaceLowerCase" xml:space="preserve">
    <value>すべてのテキストを小文字に変換する</value>
  </data>
  <data name="Common_ReplaceUpperCase" xml:space="preserve">
    <value>すべてのテキストを大文字に変換する</value>
  </data>
  <data name="Common_ReplaceTitleCase" xml:space="preserve">
    <value>すべてのテキストをタイトルケースに変換する</value>
  </data>
  <data name="Common_ReplaceWide" xml:space="preserve">
    <value>すべての英数字を全角に変換する</value>
  </data>
  <data name="Common_ReplaceHalf" xml:space="preserve">
    <value>すべての英数字を半角に変換する</value>
  </data>
  <data name="Common_ReplaceUmulaut" xml:space="preserve">
    <value>ウムラウトをASCII英字に変換する</value>
  </data>
  <data name="Common_ReplaceHanKana" xml:space="preserve">
    <value>すべての半角カタカナを全角に変換する</value>
  </data>
  <data name="Common_InsertIndex" xml:space="preserve">
    <value>3文字目に「XYZ」を挿入する</value>
  </data>
  <data name="Grid_FileType" xml:space="preserve">
    <value>ファイル種類</value>
  </data>
  <data name="Common_AddDirectoryNameBeginning" xml:space="preserve">
    <value>ディレクトリ名を先頭に追加</value>
  </data>
  <data name="Common_AddDirectoryNameBeforeExtension" xml:space="preserve">
    <value>拡張子の手前にディレクトリ名を追加</value>
  </data>
  <data name="AddingSerial_StartNumber" xml:space="preserve">
    <value>開始番号: </value>
  </data>
  <data name="AddingSerial_AddingSerialNumber" xml:space="preserve">
    <value>連番追加</value>
  </data>
  <data name="AddingSerial_ZeroPaddingDigits" xml:space="preserve">
    <value>ゼロ詰め桁数: </value>
  </data>
  <data name="AddingSerial_Step" xml:space="preserve">
    <value>ステップ数: </value>
  </data>
  <data name="AddingSerial_ResetPerFolder" xml:space="preserve">
    <value>フォルダごとリセット: </value>
  </data>
  <data name="AddingSerial_Inverse" xml:space="preserve">
    <value>逆順: </value>
  </data>
  <data name="AddingSerial_GenaratedPattern" xml:space="preserve">
    <value>生成された置換パターン</value>
  </data>
  <data name="AddingSerial_PrefixText" xml:space="preserve">
    <value>前置き文字列: </value>
  </data>
  <data name="AddingSerial_PostfixText" xml:space="preserve">
    <value>後置き文字列: </value>
  </data>
  <data name="Common_AddDateModifiedBeginning" xml:space="preserve">
    <value>先頭に更新日時を追加</value>
  </data>
  <data name="Common_AddDateModifiedBeforExtension" xml:space="preserve">
    <value>拡張子の手前に更新日時を追加</value>
  </data>
  <data name="Common_AddDateModifiedFormatted" xml:space="preserve">
    <value>更新日時を書式指定付きで追加</value>
  </data>
  <data name="Common_AddDateModifiedLocalFormat" xml:space="preserve">
    <value>更新日時をローカル書式で追加</value>
  </data>
  <data name="Common_AddDateCreatedBeginning" xml:space="preserve">
    <value>先頭に作成日時を追加</value>
  </data>
  <data name="Common_AddDateCreatedFormatted" xml:space="preserve">
    <value>作成日時を書式付きで追加</value>
  </data>
</root>