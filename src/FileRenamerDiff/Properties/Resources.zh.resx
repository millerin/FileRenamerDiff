<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Setting_SettingTab" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Setting_FileSearch" xml:space="preserve">
    <value>檔案搜尋</value>
  </data>
  <data name="Grid_DateModified" xml:space="preserve">
    <value>修改日期</value>
  </data>
  <data name="Grid_Conflicted" xml:space="preserve">
    <value>重复的</value>
  </data>
  <data name="Grid_Changed" xml:space="preserve">
    <value>已更改</value>
  </data>
  <data name="Grid_NewText" xml:space="preserve">
    <value>新文件名</value>
  </data>
  <data name="Grid_OldText" xml:space="preserve">
    <value>旧文件名</value>
  </data>
  <data name="Menu_Save" xml:space="preserve">
    <value>保存重命名</value>
  </data>
  <data name="Menu_DryRun" xml:space="preserve">
    <value>試執行</value>
  </data>
  <data name="Menu_SearchFiles" xml:space="preserve">
    <value>檔案搜尋</value>
  </data>
  <data name="Setting_Other" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="Grid_CreatedDate" xml:space="preserve">
    <value>建立日期</value>
  </data>
  <data name="Setting_ResetAllSetting" xml:space="preserve">
    <value>重置所有设置</value>
  </data>
  <data name="Setting_ReplaceTextTarget" xml:space="preserve">
    <value>目标文本</value>
  </data>
  <data name="Setting_ReplacePatterns" xml:space="preserve">
    <value>替换模式</value>
  </data>
  <data name="Setting_DeleteTexts" xml:space="preserve">
    <value>删除文本</value>
  </data>
  <data name="Setting_AsExpression" xml:space="preserve">
    <value>規則運算式</value>
  </data>
  <data name="Setting_Add" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Setting_IgnoreExtensions" xml:space="preserve">
    <value>忽略扩展版</value>
  </data>
  <data name="Setting_SearchSubDirectories" xml:space="preserve">
    <value>搜索子目录</value>
  </data>
  <data name="Setting_IgnoreDirectory" xml:space="preserve">
    <value>忽略目录</value>
  </data>
  <data name="Setting_ReplaceText" xml:space="preserve">
    <value>替换文本</value>
  </data>
  <data name="Setting_DeleteTextTarget" xml:space="preserve">
    <value>删除文本</value>
  </data>
  <data name="Grid_Directory" xml:space="preserve">
    <value>目录</value>
  </data>
  <data name="Grid_Size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="Alert_FailSaveSetting" xml:space="preserve">
    <value>保存设置失败。</value>
  </data>
  <data name="Alert_FailSaveRename" xml:space="preserve">
    <value>重命名失败，无法保存。</value>
  </data>
  <data name="Info_SettingsReset" xml:space="preserve">
    <value>设置被重置。</value>
  </data>
  <data name="Alert_FileNamesDuplicated" xml:space="preserve">
    <value>有些文件名是重复的。</value>
  </data>
  <data name="Alert_InvalidFileName" xml:space="preserve">
    <value>輸出檔名稱含有無效的檔名字元。</value>
  </data>
  <data name="Setting_ClearAll" xml:space="preserve">
    <value>彻底删除</value>
  </data>
  <data name="Alert_ConfirmClearBody" xml:space="preserve">
    <value>是否确实要清除表?</value>
  </data>
  <data name="Alert_ConfirmClearHead" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="Windows_CopyFileSuffix" xml:space="preserve">
    <value>-複製</value>
  </data>
  <data name="Alert_NotFoundFileBody" xml:space="preserve">
    <value>文件找不到了。</value>
  </data>
  <data name="Hint_SelectTargetDirectory" xml:space="preserve">
    <value>从左边的按钮中选择目标目录，或者拖动。</value>
  </data>
  <data name="Setting_IgnoreFileTypes" xml:space="preserve">
    <value>要重命名的文件类型</value>
  </data>
  <data name="Setting_FileTypeHidden" xml:space="preserve">
    <value>隐藏</value>
  </data>
  <data name="Setting_FileTypeDirectory" xml:space="preserve">
    <value>文件夹</value>
  </data>
  <data name="Setting_FileTypeFile" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="Windows_ShortcutFileSuffix" xml:space="preserve">
    <value>- 快捷方式</value>
  </data>
  <data name="Setting_ExportSettingFile" xml:space="preserve">
    <value>导出设置</value>
  </data>
  <data name="Setting_ImportSettingFile" xml:space="preserve">
    <value>导入设置</value>
  </data>
</root>